(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{178:function(t,e,r){"use strict";r.r(e);var s=r(0),i=Object(s.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),r("ul",[r("li",[t._v("컴퍼넌트가 생성되고 소멸되는 과정을 LifeCycle이라고 한다.")]),t._v(" "),r("li",[t._v("React는 LifeCycle의 특정시점에 실행되는 API(매서드)를 제공하고 있다.")]),t._v(" "),r("li",[t._v("자세한 내용은 아래 링크 참조할 것.  여기서는 직관적인 이해를 위해 글을 작성하였으며 자주사용되는 항목 중심으로 간단히 정리하였다.")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://reactjs.org/docs/react-component.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("공식문서링크"),r("OutboundLink")],1)])]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"리액트-lifecycle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#리액트-lifecycle","aria-hidden":"true"}},[this._v("#")]),this._v(" 리액트 LifeCycle")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[this._v("#")]),this._v(" Overview")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"img로-이해하기-출처-https-twitter-com-dan-abramov-status-981712092611989509"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#img로-이해하기-출처-https-twitter-com-dan-abramov-status-981712092611989509","aria-hidden":"true"}},[this._v("#")]),this._v(" Img로 이해하기 ( *출처 : https://twitter.com/dan_abramov/status/981712092611989509)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn-images-1.medium.com/max/2000/1*cEWErpe-oY-_S1dOaT1NtA.jpeg",alt:"이미지 이름"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"기본적인-흐름-이해하기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#기본적인-흐름-이해하기","aria-hidden":"true"}},[this._v("#")]),this._v(" 기본적인 흐름 이해하기")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("그림에서 가장 많이 차지하고 있는 "),r("code",[t._v("render")]),t._v(" 이 컴퍼넌트가 랜더링되는 시점이다.")]),t._v(" "),r("li",[t._v("그래서 "),r("code",[t._v("render")]),t._v("시점 이전인 "),r("code",[t._v("consructor")]),t._v(" 에서 status값을 초기화 한다.")]),t._v(" "),r("li",[t._v("또한 "),r("code",[t._v("consructor")]),t._v(" 시점에서 'super(poops)'로 부모의 props를 상속받거나 'this'를 bindding하게된다.")]),t._v(" "),r("li",[r("code",[t._v("render")]),t._v(" 가 되기전에는 status값을 변경해서는 안된다.")]),t._v(" "),r("li",[r("code",[t._v("render")]),t._v("이 완료된 시점인 "),r("code",[t._v("componentDidMount")]),t._v(", "),r("code",[t._v("componentDidUpdate")]),t._v(" 시점에서 status를 변경할 수 있다.")]),t._v(" "),r("li",[t._v("AJAX요청 및 상태의 변경은 보통 "),r("code",[t._v("componentDidMount")]),t._v("에서 처리하게 된다.")]),t._v(" "),r("li",[r("code",[t._v("componentWillUnmount")]),t._v(" 는 컴퍼넌트가 소멸되고 실행된다.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"가끔식-사용되는-lifecycle-methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#가끔식-사용되는-lifecycle-methods","aria-hidden":"true"}},[this._v("#")]),this._v(" 가끔식 사용되는 LifeCycle methods")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("code",[this._v("componentWillReceiveProps")]),this._v(" : 컴퍼넌트가 porps를 새로 전달받았을때 실행되며 리랜더링 되지 않는다.")]),this._v(" "),e("li",[e("code",[this._v("shouldComponentUpdate")]),this._v("는 Boolean값을 반환하는데 porps나 status가 변경되었을때 랜더링의 유무를 결정한다.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"react16-부터-추가된-lifecycle-methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react16-부터-추가된-lifecycle-methods","aria-hidden":"true"}},[this._v("#")]),this._v(" React16 부터 추가된 LifeCycle methods")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[r("code",[t._v("getDerivedStateFromProps")]),t._v(" : 새로운 porps전달 받았을 때 실행되며 "),r("code",[t._v("componentWillReceiveProps")]),t._v("의 대안으로 추가되었다.")]),t._v(" "),r("li",[r("code",[t._v("getSnapshotBeforeUpdate")]),t._v(" : "),r("code",[t._v("render")]),t._v(" 이후 DOM이 변화하기 직전에 실행되며 기존의 "),r("code",[t._v("componentWillUpdate")]),t._v("의 대안으로 추가되었다.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"결론"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#결론","aria-hidden":"true"}},[this._v("#")]),this._v(" 결론")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("LifeCycle은 학습하면서 문서나 책을 통해 정확히 이해할 수 없었고 기본적인 LifeCycle Methods를 제외하고 특빌히 적용될만한 상황을 찾기가 어려운 것 같다.")]),this._v(" "),e("li",[this._v("하지만 큰 흐름을 알고있다면 필요한 순간에 찾아서 적용하면 될 것 같다는 느낌이 든다.")])])}],!1,null,null,null);i.options.__file="post5.md";e.default=i.exports}}]);